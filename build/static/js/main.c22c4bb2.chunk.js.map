{"version":3,"sources":["firebase.js","features/appSlice.js","components/SidebarOption.js","components/Sidebar.js","components/Message.js","components/ChatInput.js","components/Chat.js","components/Login.js","components/Header.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","appSlice","createSlice","name","initialState","roomId","reducers","enterRoom","state","action","payload","actions","selectRoomId","app","SidebarOption","Icon","title","id","addChannelOption","dispatch","useDispatch","SidebarOptionContainer","onClick","channelName","prompt","collection","add","fontSize","style","padding","SidebarOptionChannel","styled","div","h3","Sidebar","useAuthState","user","useCollection","channels","SidebarContainer","SidebarHeader","SidebarInfo","displayName","href","GitHubIcon","ExpandMoreIcon","AddIcon","docs","map","doc","data","Message","message","timestamp","userImage","MessageContainer","src","alt","MessageInfo","className","Date","toDate","toUTCString","ChatInput","channelId","chatRef","useState","input","setInput","ChatInputContainer","placeholder","toLowerCase","value","onChange","e","target","type","Button","hidden","preventDefault","console","log","FieldValue","serverTimestamp","photoURL","current","scrollIntoView","behavior","block","Chat","useRef","useSelector","roomDetails","orderBy","roomMessages","roomLoading","useEffect","ChatContainer","Header","HeaderLeft","HeaderRight","ChatBottom","ref","Login","LoginContainer","LoginInnerContainer","signInWithPopup","catch","error","alert","HeaderContainer","HeaderAvatar","HeaderSearch","signOut","Avatar","App","AppLoading","AppLoadingContents","color","fadeIn","AppBody","path","configureStore","reducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c22c4bb2.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDv7s0IiZ4r2pyPk5cjpbKxf-f9wqle1U4\",\r\n  authDomain: \"teamify-jusoft.firebaseapp.com\",\r\n  projectId: \"teamify-jusoft\",\r\n  storageBucket: \"teamify-jusoft.appspot.com\",\r\n  messagingSenderId: \"569215127271\",\r\n  appId: \"1:569215127271:web:e390b44d6986d1ebbe1c42\",\r\n  measurementId: \"G-64XNP34QPC\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { auth, provider, db };\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const appSlice = createSlice({\r\n  name: \"app\",\r\n  initialState: {\r\n    roomId: null,\r\n  },\r\n  reducers: {\r\n    enterRoom: (state, action) => {\r\n      state.roomId = action.payload.roomId;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { enterRoom } = appSlice.actions;\r\n\r\nexport const selectRoomId = (state) => state.app.roomId;\r\n\r\nexport default appSlice.reducer;\r\n","import React from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { enterRoom } from \"../features/appSlice\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction SidebarOption({ Icon, title, id, addChannelOption }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const selectChannel = () => {\r\n    if (id) {\r\n      dispatch(\r\n        enterRoom({\r\n          roomId: id,\r\n        })\r\n      );\r\n    }\r\n  };\r\n  const addChannel = () => {\r\n    const channelName = prompt(\"Enter a channel name\");\r\n\r\n    if (channelName) {\r\n      db.collection(\"rooms\").add({\r\n        name: channelName,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SidebarOptionContainer\r\n      onClick={addChannelOption ? addChannel : selectChannel}\r\n    >\r\n      {Icon && <Icon fontSize=\"small\" style={{ padding: 10 }} />}\r\n      {Icon ? (\r\n        <h3>{title}</h3>\r\n      ) : (\r\n        <SidebarOptionChannel>\r\n          <span>#</span> {title}\r\n        </SidebarOptionChannel>\r\n      )}\r\n    </SidebarOptionContainer>\r\n  );\r\n}\r\n\r\nexport default SidebarOption;\r\n\r\nconst SidebarOptionContainer = styled.div`\r\n  display: flex;\r\n  font-size: 12px;\r\n  align-items: center;\r\n  padding-left: 2px;\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    opacity: 0.8;\r\n    background-color: #EAB024;\r\n  }\r\n\r\n  > h3 {\r\n    font-weight: 500;\r\n  }\r\n\r\n  > h3 > span {\r\n    padding: 15px;\r\n  }\r\n`;\r\n\r\nconst SidebarOptionChannel = styled.h3`\r\n  padding: 10px 0;\r\n  font-weight: 300;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { auth, db } from \"../firebase\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useCollection } from \"react-firebase-hooks/firestore\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Sidebar() {\r\n  const [user] = useAuthState(auth);\r\n  const [channels] = useCollection(db.collection(\"rooms\"));\r\n\r\n  return (\r\n    <SidebarContainer>\r\n      <SidebarHeader>\r\n        <SidebarInfo>\r\n          <h2>Teamify</h2>\r\n          <h3>\r\n            <FiberManualRecordIcon />\r\n            {user?.displayName}\r\n          </h3>\r\n        </SidebarInfo>\r\n      </SidebarHeader>\r\n      <hr />\r\n        <a href=\"https://github.com/\"><SidebarOption Icon={GitHubIcon} title=\"Github\" /></a>\r\n      <SidebarOption Icon={ExpandMoreIcon} title=\"Channels\" />\r\n      <hr />\r\n      <SidebarOption Icon={AddIcon} addChannelOption title=\"Add Channel\" />\r\n      {channels?.docs.map((doc) => (\r\n        <SidebarOption key={doc.id} title={doc.data().name} id={doc.id} />\r\n      ))}\r\n    </SidebarContainer>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n\r\nconst SidebarContainer = styled.div`\r\n  color: white;\r\n  background-color: var(--teamify-color);\r\n  flex: 0.3;\r\n  border-top: 1px solid #303952;\r\n  max-width: 260px;\r\n  margin-top: 60px;\r\n\r\n  > hr {\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    border: 1px solid #303952;\r\n  }\r\n`;\r\n\r\nconst SidebarHeader = styled.div`\r\n  display: flex;\r\n  border-bottom: 1px solid #303952;\r\n  padding-bottom: 10px;\r\n  padding: 13px;\r\n\r\n  > .MuiSvgIcon-root {\r\n    padding: 8px;\r\n    color: #303952;\r\n    font-size: 18px;\r\n    background-color: white;\r\n    border-radius: 999px;\r\n  }\r\n`;\r\n\r\nconst SidebarInfo = styled.div`\r\n  flex: 1;\r\n\r\n  > h2 {\r\n    font-size: 15px;\r\n    font-weight: 900;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  > h3 {\r\n    display: flex;\r\n    font-size: 13px;\r\n    font-weight: 400;\r\n    align-items: center;\r\n  }\r\n\r\n  > h3 > .MuiSvgIcon-root {\r\n    font-size: 14px;\r\n    margin-top: 1px;\r\n    margin-right: 2px;\r\n    color: green;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Message({ message, timestamp, user, userImage }) {\r\n  return (\r\n    <MessageContainer>\r\n      <img src={userImage} alt=\"\" />\r\n      <MessageInfo>\r\n        <h4>\r\n          {user}{\" \"}\r\n          <span className=\"message__timestamp\">\r\n            {new Date(timestamp?.toDate()).toUTCString()}\r\n          </span>\r\n        </h4>\r\n        <p>{message}</p>\r\n      </MessageInfo>\r\n    </MessageContainer>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n\r\nconst MessageContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 20px;\r\n\r\n  > img {\r\n    height: 50px;\r\n    border-radius: 8px;\r\n  }\r\n`;\r\n\r\nconst MessageInfo = styled.div`\r\n  padding-left: 10px;\r\n\r\n  > h4 > span {\r\n    color: gray;\r\n    font-weight: 300;\r\n    margin-left: 4px;\r\n    font-size: 10px;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { auth, db } from \"../firebase\";\r\nimport firebase from \"firebase\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction ChatInput({ channelName, channelId, chatRef }) {\r\n  const [input, setInput] = useState(\"\");\r\n  const [user] = useAuthState(auth);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    console.log(channelId);\r\n\r\n    if (!channelId) {\r\n      return false;\r\n    }\r\n\r\n    db.collection(\"rooms\").doc(channelId).collection(\"messages\").add({\r\n      message: input,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      user: user.displayName,\r\n      userImage: user.photoURL,\r\n    });\r\n\r\n    chatRef.current.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"nearest\",\r\n    });\r\n    setInput(\"\");\r\n  };\r\n  return (\r\n    <ChatInputContainer>\r\n      <form>\r\n        <input\r\n          placeholder={`Message #${channelName.toLowerCase()}`}\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          type=\"text\"\r\n        />\r\n        <Button hidden type=\"submit\" onClick={sendMessage}>\r\n          SEND\r\n        </Button>\r\n      </form>\r\n    </ChatInputContainer>\r\n  );\r\n}\r\n\r\nexport default ChatInput;\r\n\r\nconst ChatInputContainer = styled.div`\r\n  border-radius: 20px;\r\n\r\n  > form {\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  > form > input {\r\n    position: fixed;\r\n    bottom: 30px;\r\n    width: 60%;\r\n    border: 1px solid gray;\r\n    border-radius: 3px;\r\n    padding: 20px;\r\n    outline: none;\r\n  }\r\n\r\n  > form > button {\r\n    display: none !important;\r\n  }\r\n`;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport StarBorderOutlinedIcon from \"@material-ui/icons/StarBorderOutlined\";\r\nimport Message from \"./Message\";\r\nimport ChatInput from \"./ChatInput\";\r\nimport { useCollection } from \"react-firebase-hooks/firestore\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectRoomId } from \"../features/appSlice\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Chat() {\r\n  const chatRef = useRef(null);\r\n  const roomId = useSelector(selectRoomId);\r\n  const [roomDetails] = useCollection(\r\n    roomId && db.collection(\"rooms\").doc(roomId)\r\n  );\r\n  const [roomMessages, roomLoading] = useCollection(\r\n    roomId &&\r\n      db\r\n        .collection(\"rooms\")\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n  );\r\n\r\n  useEffect(() => {\r\n    chatRef?.current?.scrollIntoView();\r\n  }, [roomId, roomLoading]);\r\n\r\n  return (\r\n    <ChatContainer>\r\n      {roomDetails && roomMessages && (\r\n        <>\r\n          <Header>\r\n            <HeaderLeft>\r\n              <h4>\r\n                <strong>#{roomDetails?.data().name}</strong>\r\n                <StarBorderOutlinedIcon />\r\n              </h4>\r\n            </HeaderLeft>\r\n            <HeaderRight>\r\n              <p>\r\n                <InfoOutlinedIcon /> Details\r\n              </p>\r\n            </HeaderRight>\r\n          </Header>\r\n\r\n          <div className=\"chat__messages\">\r\n            {roomMessages?.docs.map((doc) => {\r\n              const { message, timestamp, user, userImage } = doc.data();\r\n              return (\r\n                <Message\r\n                  key={doc.id}\r\n                  message={message}\r\n                  timestamp={timestamp}\r\n                  user={user}\r\n                  userImage={userImage}\r\n                />\r\n              );\r\n            })}\r\n            <ChatBottom ref={chatRef} />\r\n          </div>\r\n\r\n          <ChatInput\r\n            chatRef={chatRef}\r\n            channelName={roomDetails.data().name}\r\n            channelId={roomId}\r\n          />\r\n        </>\r\n      )}\r\n    </ChatContainer>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n\r\nconst ChatContainer = styled.div`\r\n  flex: 0.7;\r\n  flex-grow: 1;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 20px;\r\n  border-bottom: 1px solid lightgray;\r\n`;\r\n\r\nconst HeaderLeft = styled.div`\r\n  > h4 {\r\n    display: flex;\r\n    text-transform: lowercase;\r\n  }\r\n\r\n  > h4 > .MuiSvgIcon-root {\r\n    margin-left: 10px;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nconst HeaderRight = styled.div`\r\n  > p {\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 14px;\r\n  }\r\n\r\n  > p > .MuiSvgIcon-root {\r\n    margin-right: 5px !important;\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst ChatBottom = styled.div`\r\n  padding-bottom: 200px;\r\n`;\r\n","import React from \"react\";\r\nimport { auth, provider } from \"../firebase\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Login() {\r\n  const signIn = (e) => {\r\n    e.preventDefault();\r\n    auth.signInWithPopup(provider).catch((error) => alert(error.message));\r\n  };\r\n\r\n  return (\r\n    <LoginContainer>\r\n      <LoginInnerContainer className=\"login__container\">\r\n        <img\r\n          src=\"https://i.imgur.com/LHzgE4N.png\"\r\n          alt=\"Teamify Logo\"\r\n\r\n        />\r\n        <div className=\"login__text\">\r\n          <h1>Get started with Teamify</h1>\r\n          <p>Host your own Team Chat</p>\r\n        </div>\r\n\r\n        <Button type=\"submit\" onClick={signIn}>\r\n          Sign In With Google\r\n        </Button>\r\n      </LoginInnerContainer>\r\n    </LoginContainer>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\nconst LoginContainer = styled.div`\r\n  background-color: #f8f8f8;\r\n  height: 100vh;\r\n  display: grid;\r\n  place-items: center;\r\n`;\r\n\r\nconst LoginInnerContainer = styled.div`\r\n  padding: 100px;\r\n  text-align: center;\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n\r\n  > img {\r\n    object-fit: contain;\r\n    height: 100px;\r\n    margin-bottom: 40px;\r\n  }\r\n\r\n  > button {\r\n    margin-top: 50px;\r\n    text-transform: inherit !important;\r\n    background-color: #FFBD1F !important;\r\n    color: white;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { auth } from \"../firebase\";\r\nimport styled from \"styled-components\";\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nfunction Header() {\r\n  const [user] = useAuthState(auth);\r\n\r\n  return (\r\n    <HeaderContainer>\r\n      <HeaderLeft>\r\n        <HeaderAvatar\r\n          alt={user?.displayName}\r\n          src={user?.photoURL}\r\n        />\r\n      </HeaderLeft>\r\n      <HeaderSearch className=\"header__search\">\r\n        <SearchIcon />\r\n        <input placeholder=\"Search\" type=\"text\" />\r\n      </HeaderSearch>\r\n      <HeaderRight>\r\n          <ExitToAppIcon onClick={() => auth.signOut()}/>\r\n      </HeaderRight>\r\n    </HeaderContainer>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n\r\nconst HeaderContainer = styled.div`\r\n  display: flex;\r\n  position: fixed;\r\n  width: 100%;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 10px 0;\r\n  background-color: var(--teamify-color);\r\n  color: white;\r\n`;\r\n\r\nconst HeaderAvatar = styled(Avatar)`\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst HeaderLeft = styled.div`\r\n  flex: 0.3;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 20px;\r\n\r\n  > .MuiSvgIcon-root {\r\n    margin-left: auto;\r\n    margin-right: 30px;\r\n  }\r\n`;\r\n\r\nconst HeaderSearch = styled.div`\r\n  flex: 0.4;\r\n  opacity: 1;\r\n  border-radius: 6px;\r\n  background-color: #303952;\r\n  text-align: center;\r\n  display: flex;\r\n  padding: 0 50px;\r\n  color: gray;\r\n  border: 1px gray solid;\r\n\r\n  > input {\r\n    background-color: transparent;\r\n    border: none;\r\n    text-align: center;\r\n    min-width: 30vw;\r\n  }\r\n`;\r\n\r\nconst HeaderRight = styled.div`\r\n  flex: 0.3;\r\n  display: flex;\r\n  align-items: flex-end;\r\n\r\n  > .MuiSvgIcon-root {\r\n    margin-left: auto;\r\n    margin-right: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { auth } from \"./firebase\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Chat from \"./components/Chat\";\r\nimport Login from \"./components/Login\";\r\nimport Header from \"./components/Header\";\r\nimport Spinner from \"react-spinkit\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction App() {\r\n  const [user, loading] = useAuthState(auth);\r\n\r\n  if (loading) {\r\n    return (\r\n      <AppLoading>\r\n        <AppLoadingContents>\r\n          <img\r\n            src=\"https://i.imgur.com/LHzgE4N.png\"\r\n            alt=\"\"\r\n          />\r\n\r\n          <Spinner\r\n            className=\"app__spinner\"\r\n            name=\"ball-spin-fade-loader\"\r\n            color=\"#303952\"\r\n            fadeIn=\"none\"\r\n          />\r\n        </AppLoadingContents>\r\n      </AppLoading>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        {!user ? (\r\n          <Login />\r\n        ) : (\r\n          <>\r\n            <Header />\r\n            <AppBody>\r\n              <Sidebar />\r\n              <Switch>\r\n                <Route path=\"/room/:roomId\">\r\n                  <Chat />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                  <Chat />\r\n                </Route>\r\n              </Switch>\r\n            </AppBody>\r\n          </>\r\n        )}\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst AppLoadingContents = styled.div`\r\n  text-align: center;\r\n  padding-bottom: 100px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  > img {\r\n    height: 100px;\r\n    padding: 20px;\r\n    margin-bottom: 40px;\r\n  }\r\n`;\r\n\r\nconst AppLoading = styled.div`\r\n  display: grid;\r\n  place-items: center;\r\n  height: 100vh;\r\n  width: 100%;\r\n`;\r\n\r\nconst AppBody = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n`;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport appReducer from \"../features/appSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    app: appReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}